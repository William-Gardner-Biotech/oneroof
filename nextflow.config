params {

    // 
    primer_bed = ""

    // 
    refseq = ""

    // 
    ref_gbk = ""

    // 
    remote_pod5_location = ""

    // 
    pod5_dir = ""

    // 
    illumina_fastq_dir = ""

    // the Nanopore basecalling model to apply to the provided pod5 data (defaults to the latest super-accuracy version)
    model = "sup@latest"

    // where to cache the models locally (defaults to a directory called models/ that will be placed alongside the other workflow files). Models will only be downloaded upon the user's first execution of the workflow unless the user deletes the models directory.
    model_cache = "$projectDir/models"

    // The Nanopore barcoding kit used to prepare sequencing libraries.
    kit = null

    // How many pod5 files to basecall at once. With a single available GPU, all pod5 files should be basecalled together, so this parameter defaults to the special value -1, which tells Nextflow to take all pod5 files at once.
    pod5_batch_size = -1

    // If basecalling pod5 files is to be parallelized across multiple available GPUs, this parameter tells Nextflow how many parallel instances of the basecaller to run at once (defaults to 2).
    basecall_max = 2

    // The maximum number of mismatches to allow when finding primers (defaults to 0)
    max_mismatch = 0

    // Where to cache a custom snpEff database (defaults to a directory called snpEff_cache/ that will be placed alongside the other workflow files). Like with the model data, this database will only be generated upon the user's first execution of the workflow unless the user deletes the snpEff_cache directory
    snpeff_cache = "$projectDir/snpEff_cache"

    // Minimum variant frequency to call a variant. 
    min_variant_frequency = 0.2

    // Minimum depth of coverage
    min_depth_coverage = 20

	// Where to place results
	results = "$launchDir/results"

    // whether to cleanup work directory after a successful run (defaults to false)
    cleanup = null


    // parameters that generally should not be overwritten in normal use cases
    // ---------------------------------------------------

    // snpEff config file
    snpEff_config = "$projectDir/assets/snpeff.config"

    // results subdirectory default names
    params.basecall_results = params.results + "/basecalled_demuxed"
    params.basecall_bams = params.basecall_results + "bams"
    params.basecall_fastqs = params.basecall_results + "fastqs"
    params.primer_handling = params.results + "/primer_handling"
    params.respliced = params.primer_handling + "/respliced_primers"
    params.complete_amplicons = params.primer_handling + "/complete_amplicons"
    params.merged_by_sample = params.primer_handling + "/merged_by_sampe"
    params.alignment = params.results + "alignment_results"
    params.consensus = params.results + "/consensus_seqs"
    params.variants = params.results + "/variants"
    params.ivar = params.variants + "/ivar_tables"
    params.vcf = params.variants + "/annotated_vcfs"

}


// WHETHER TO GENERATE A REPORT OF RUN STATISTICS
report {
    enabled = true
	overwrite = true
    file    = "${params.results}/report.html"
}


// WHETHER TO GENERATE A VISUALIZATION OF THE WORKFLOW
dag {
	enabled = true
	overwrite = true
	file = "${params.results}/workflow-visualization.png"
}


// WHETHER TO REMOVE TEMPORARY FILES AFTER A SUCCESSFUL RUN
cleanup = params.cleanup


// PROFILE OPTIONS
profiles {
	
	standard {
		
		docker.enabled = true
		singularity.enabled = false
		conda.enabled = false

		process.container = "nrminor/dorado-and-friends:v0.1.0"

	}
	
	docker {
		
		docker.enabled = true
		singularity.enabled = false
		conda.enabled = false

		process.container = "nrminor/dorado-and-friends:v0.1.0"

	}
	
	singularity {
		
		singularity.enabled = true
		docker.enabled = false
		conda.enabled = false

		process.container = "docker://nrminor/dorado-and-friends:v0.1.0"

	}
	
	apptainer {
		
		apptainer.enabled = true
		docker.enabled = false
		conda.enabled = false

		process.container = "docker://nrminor/dorado-and-friends:v0.1.0"

	}

    containerless {

		apptainer.enabled = false
		docker.enabled = false
		conda.enabled = false

    }
}


// MANIFEST
manifest {
	homePage = ''
	mainScript = 'main.nf'
	defaultBranch = 'main'
	description = ''
	author = ''
}